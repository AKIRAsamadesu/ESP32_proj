[1/11] Performing build step for 'bootloader'
[1/1] cd /home/zhou/Desktop/TVmini/My_cubic/2-software/my_cubic_proj/build/bootloader/esp-idf/esptool_py && /home/zhou/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/zhou/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/zhou/Desktop/TVmini/My_cubic/2-software/my_cubic_proj/build/bootloader/bootloader.bin
Bootloader binary size 0x6740 bytes. 0x8c0 bytes (8%) free.
[2/9] Building C object esp-idf/screen/CMakeFiles/__idf_screen.dir/screen.c.obj
[3/9] Linking C static library esp-idf/screen/libscreen.a
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Generating ld/sections.ld
[6/9] Building C object CMakeFiles/my_cubic_proj.elf.dir/project_elf_src_esp32.c.obj
[7/9] Linking CXX executable my_cubic_proj.elf
[8/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/zhou/Desktop/TVmini/My_cubic/2-software/my_cubic_proj/build/my_cubic_proj.bin
[9/9] cd /home/zhou/Desktop/TVmini/My_cubic/2-software/my_cubic_proj/build/esp-idf/esptool_py && /home/zhou/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/zhou/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/zhou/Desktop/TVmini/My_cubic/2-software/my_cubic_proj/build/partition_table/partition-table.bin /home/zhou/Desktop/TVmini/My_cubic/2-software/my_cubic_proj/build/my_cubic_proj.bin
my_cubic_proj.bin binary size 0x2a370 bytes. Smallest app partition is 0x100000 bytes. 0xd5c90 bytes (84%) free.
